  type sayHi {
    msg: String
  }

  type User {
    id: String
    username: String
    email: String
    note_id: String
  }

  type Note {
    title: String
    content: String
    type: String
    userId: String
  }

  type Notes {
    id: String
    title: String
    content: String
    type: String
    users: String
  }

  type Users {
    id: String
    users: String
  }

  input UsersInput {
    id: String
    username: String
  }

  type GetNotes {
    id: String
    title: String
    content: String
    type: String
    users: String
    noteUsers: [Users]
  }

  type updateTitle {
    id: String
    title: String
    noteId: String
  }

  type updateContent {
    id: String
    content: String
    noteId: String
  }

  type Query {
    hello: String
    say( msg: String ): sayHi
    user: [User]
    note( users: String ): [Notes]
    noteByID( id: String ): [Notes]
    queryNotes( users: String ): [GetNotes]
  }

  type Mutation {
    newNote( userId: String, title: String, content: String, type: String ): Note
    newTitle( title: String, id: String, noteId: String ): updateTitle
    newContent( content: String, id: String, noteId: String ): updateContent
  }